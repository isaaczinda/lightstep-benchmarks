version: 2.1

executors:
  python-executor:
    docker:
      - image: circleci/python:3.7.4
    working_directory: ~/repo

jobs:
  # this job is copied from here:
  # https://github.com/lightstep/lightstep-tracer-cpp/blob/master/.circleci/config.yml#L109
  build_python_cpp:
    docker:
      - image: ubuntu:18.04
    working_directory: ~/
    steps:
      - restore_cache:
          keys: bazel-cache

      - run:
          name: test
          command: |
            apt-get -qq update; apt-get -y install git ssh
            git clone https://github.com/lightstep/lightstep-tracer-cpp.git
            cd lightstep-tracer-cpp
            ./ci/setup_build_environment.sh
            ./ci/install_bazel.sh
            ./ci/do_ci.sh plugin

      - save_cache:
          paths:
            - ~/.cache/bazel
          key: bazel-cache

      - persist_to_workspace:
          root: /plugin
          paths:
            - "*"
  build:
    executor: python-executor

    steps:
      # checkout project code into working directory (~/repo)
      - checkout

      - attach_workspace:
          at: /plugin

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install pip dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip==19.1.* setuptools==41.0.*
            pip install -r requirements.txt

      - run: ./scripts/install-protobuf.sh
      - run: ./scripts/compile-proto.sh
      - run: sudo ./scripts/install-bazel.sh
      - run: cd sidecar; bazel build //:sidecar

      - run:
          name: checkout & install tracers
          command: |
            source venv/bin/activate
            git clone https://github.com/lightstep/lightstep-tracer-python.git --branch 4.2.1
            pip install -e lightstep-tracer-python
            pip install /plugin/*.whl

      # now that we have installed
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run: mkdir graphs

      - persist_to_workspace:
          root: ~/repo
          paths:
            - "*"

  test:
    executor: python-executor

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest test.py

      - store_artifacts:
          path: logs
          destination: logs

  make_memory_graphs:
    executor: python-executor

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: make graphs
          command: |
            . venv/bin/activate
            ./sidecar/bazel-bin/sidecar &
            python memory_graphs.py python
            python memory_graphs.py python-cpp
            python memory_graphs.py python-sidecar

      - store_artifacts:
          path: logs
          destination: logs

      - store_artifacts:
          path: graphs
          destination: graphs

  make_dropped_graphs:
    executor: python-executor

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: make graphs
          command: |
            . venv/bin/activate
            ./sidecar/bazel-bin/sidecar &
            python dropped_graphs.py python
            python dropped_graphs.py python-cpp
            python dropped_graphs.py python-sidecar

      - store_artifacts:
          path: logs
          destination: logs

      - store_artifacts:
          path: graphs
          destination: graphs

  make_satellite_disconnect_graphs:
    executor: python-executor

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: make graphs
          command: |
            . venv/bin/activate
            python satellite_disconnect_graphs.py python
            python satellite_disconnect_graphs.py python-cpp

      - store_artifacts:
          path: logs
          destination: logs

      - store_artifacts:
          path: graphs
          destination: graphs

  make_cpu_graphs:
    executor: python-executor

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: make graphs
          command: |
            . venv/bin/activate
            ./sidecar/bazel-bin/sidecar &
            python cpu_graphs.py python
            python cpu_graphs.py python-cpp
            python cpu_graphs.py python-sidecar

      - store_artifacts:
          path: logs
          destination: logs

      - store_artifacts:
          path: graphs
          destination: graphs

workflows:
  version: 2

  # build, then run regression tests whenever there is a commit
  build_test:
    jobs:
      - build_python_cpp
      - build:
          requires:
            - build_python_cpp
      - test:
          requires:
            - build

  # build, then simultaneously test and generate all graphs
  build_graphs:
    triggers: #use the triggers key to indicate a scheduled build
      - schedule:
          cron: "0 5 31 2 *" # runs feb 31st (AKA NEVER)
          filters:
            branches:
              - master
    jobs:
      - build_python_cpp
      - build:
          requires:
            - build_python_cpp
      - make_memory_graphs:
          requires:
            - build
      - make_dropped_graphs:
          requires:
            - build
      - make_satellite_disconnect_graphs:
          requires:
            - build
      - make_cpu_graphs:
          requires:
            - build
