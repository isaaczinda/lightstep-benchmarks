version: 2.1

executors:
  python-executor:
    docker:
      - image: circleci/python:3.7.4
    working_directory: ~/repo

jobs:
  build:
    executor: python-executor

    steps:
      # checkout project code into working directory (~/repo)
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install pip dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip==19.1.* setuptools==41.0.*
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      ## COMPILE PROTOBUF ##

      - run:
          name: install protobuf
          command: |
            curl -OL https://github.com/google/protobuf/releases/download/v3.2.0/protoc-3.2.0-linux-x86_64.zip
            unzip protoc-3.2.0-linux-x86_64.zip -d protoc3
            sudo mv protoc3/bin/* /usr/local/bin/
            sudo mv protoc3/include/* /usr/local/include/

      - run:
          name: compile protobuf
          command: ./satellite/compile-proto.sh

      ## BUILD SIDECAR ##

      # https://docs.bazel.build/versions/master/install-ubuntu.html#install-with-installer-ubuntu
      - run:
          name: install bazel
          command: |
            echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
            curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
            sudo apt-get update && sudo apt-get install bazel

      # cache the sidecar build because this is fairly time-consuming
      - restore_cache:
          keys:
            - sidecar-build

      - run:
          name: build sidecar
          command: |
            cd sidecar
            bazel build //:sidecar

      - save_cache:
          paths:
            - ./sidecar/bazel-temp
          key: sidecar-build

      - run:
          name: make graphs directory
          command: mkdir graphs

      - persist_to_workspace:
          root: ~/
          paths:
            - repo

  test:
    executor: python-executor

    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest test.py

      - store_artifacts:
          path: logs
          destination: logs

  make_memory_graphs:
    executor: python-executor

    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: make graphs
          command: |
            . venv/bin/activate
            ./sidecar/bazel-bin/sidecar &
            python memory_graphs.py python
            python memory_graphs.py python-cpp
            python memory_graphs.py python-sidecar

      - store_artifacts:
          path: logs
          destination: logs

      - store_artifacts:
          path: graphs
          destination: graphs

  make_dropped_graphs:
    executor: python-executor

    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: make graphs
          command: |
            . venv/bin/activate
            ./sidecar/bazel-bin/sidecar &
            python dropped_graphs.py python
            python dropped_graphs.py python-cpp
            python dropped_graphs.py python-sidecar

      - store_artifacts:
          path: logs
          destination: logs

      - store_artifacts:
          path: graphs
          destination: graphs

  make_satellite_disconnect_graphs:
    executor: python-executor

    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: make graphs
          command: |
            . venv/bin/activate
            python satellite_disconnect_graphs.py python
            python satellite_disconnect_graphs.py python-cpp

      - store_artifacts:
          path: logs
          destination: logs

      - store_artifacts:
          path: graphs
          destination: graphs

  make_cpu_graphs:
    executor: python-executor

    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: make graphs
          command: |
            . venv/bin/activate
            ./sidecar/bazel-bin/sidecar &
            python cpu_graphs.py python
            python cpu_graphs.py python-cpp
            python cpu_graphs.py python-sidecar

      - store_artifacts:
          path: logs
          destination: logs

      - store_artifacts:
          path: graphs
          destination: graphs

workflows:
  version: 2

  # build, then run regression tests whenever there is a commit
  build_test:
    jobs:
      - build
      - test:
          requires:
            - build

  # build, then simultaneously test and generate all graphs
  build_graphs:
    jobs:
      - build
      - make_memory_graphs:
          requires:
            - build
      - make_dropped_graphs:
          requires:
            - build
      - make_satellite_disconnect_graphs:
          requires:
            - build
      - make_cpu_graphs:
          requires:
            - build
