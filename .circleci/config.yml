# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      # checkout project code into working directory (~/repo)
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python3 -m pip install -U pip setuptools
            python3 -m pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: install protobuf
          command: |
            curl -OL https://github.com/google/protobuf/releases/download/v3.2.0/protoc-3.2.0-linux-x86_64.zip
            unzip protoc-3.2.0-linux-x86_64.zip -d protoc3
            sudo mv protoc3/bin/* /usr/local/bin/
            sudo mv protoc3/include/* /usr/local/include/

      - run:
          name: compile protobuf
          command: ./scripts/compile-proto.sh

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest test.py

      - run:
          name: make graphs
          command: |
            mkdir graphs
            python3 make_graphs.py graphs

      - store_artifacts:
          path: graphs

      # - store_artifacts:
      #     path: test-reports
      #     destination: test-reports
