version: 2
jobs:
  build:
    docker:

      - image: circleci/python:3.7.4

    working_directory: ~/repo

    steps:
      # checkout project code into working directory (~/repo)
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install pip dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip==19.1.* setuptools==41.0.*
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # https://docs.bazel.build/versions/master/install-ubuntu.html#install-with-installer-ubuntu
      - run:
          name: install bazel
          command: |
            echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
            curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
            sudo apt-get update && sudo apt-get install bazel

      - run:
          name: install protobuf
          command: |
            curl -OL https://github.com/google/protobuf/releases/download/v3.2.0/protoc-3.2.0-linux-x86_64.zip
            unzip protoc-3.2.0-linux-x86_64.zip -d protoc3
            sudo mv protoc3/bin/* /usr/local/bin/
            sudo mv protoc3/include/* /usr/local/include/

      - run:
          name: compile protobuf
          command: ./satellite/compile-proto.sh

      # cache the sidecar build because this is fairly time-consuming
      - restore_cache:
          keys:
            - sidecar-build

      - run:
          name: build sidecar
          command: |
            cd sidecar
            bazel build //:sidecar

      - save_cache:
          paths:
            - ./sidecar/bazel-temp
          key: sidecar-build

      - run:
          name: run cpp test
          command: |
            . venv/bin/activate
            python cpp_test.py

      - store_artifacts:
          path: logs
          destination: cpp_test_logs

      # - run:
      #     name: run tests
      #     command: |
      #       . venv/bin/activate
      #       ./sidecar/bazel-bin/sidecar &
      #       pytest test.py
      #
      # - store_artifacts:
      #     path: logs
      #     destination: test_logs

      # - run:
      #     name: make graphs
      #     command: |
      #       . venv/bin/activate
      #       mkdir graphs
      #       ./sidecar/bazel-bin/sidecar &
      #       python make_graphs.py graphs
      #
      # - store_artifacts:
      #     path: logs
      #     destination: graph_logs
      #
      # - store_artifacts:
      #     path: graphs
      #     destination: graphs
